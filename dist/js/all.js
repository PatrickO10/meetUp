!function(){"use strict";angular.module("app",["app.dashboard","app.login","app.fbAuth","app.event"]).constant("FBURL","https://vivid-torch-762.firebaseio.com/")}(),function(){"use strict";angular.module("app.dashboard",["firebase"])}(),function(){"use strict";angular.module("app.fbAuth",["firebase"])}(),function(){"use strict";angular.module("app.event",[])}(),function(){"use strict";angular.module("app.login",["firebase"])}(),function(){"use strict";function e(e,t){function r(r){if(r){console.log("User "+r.uid+" is logged in with "+r.provider);var o=e.setEventRef(r.uid);n.eventsArray=t(o),n.loggedStatus=!0}else console.log("User is logged out")}var n=this;n.logOut=function(){e.logOutUser(),n.loggedStatus=!1},e.setOnAuth(r)}angular.module("app.dashboard").controller("MainCtrl",e),e.$inject=["authService","$firebaseArray"]}(),function(){"use strict";function e(e){var t=this;t.masterEvent={},t.userObj=e.getUserAuth(),t.userEventRef=e.setEventRef(t.userObj.uid);var r=document.getElementById("loc-input");t.eventLoc="",t.autocomplete=new google.maps.places.Autocomplete(r),t.autocomplete.addListener("place_changed",function(){var e=t.autocomplete.getPlace();t.eventLoc=e.formatted_address}),t.createEvent=function(e){t.masterEvent=angular.copy(e),t.userEventRef.push({name:t.masterEvent.name,type:t.masterEvent.type,host:t.masterEvent.host,startDate:t.masterEvent.startDate.getTime(),endDate:t.masterEvent.endDate.getTime(),location:t.eventLoc,guests:t.masterEvent.guests,msg:t.masterEvent.msg||""}),e.msg="",$("#newEventForm")[0].reset(),$(".newEvent").modal("hide")}}angular.module("app.event").controller("EventCtrl",e),e.$inject=["authService"]}(),function(){"use strict";function e(e,t,r){var n=this;n.masterUser={},e.loginError=!1,e.loginErrMsg="",n.login=function(t){n.masterUser=angular.copy(t),console.log(n.masterUser),r.loginWithPwd(n.masterUser).then(function(t){e.loginError=!1,e.loginErrMsg="",$("#loginForm")[0].reset(),$(".login").modal("hide")},function(t){switch(e.loginError=!0,t.code){case"EMAIL_TAKEN":e.loginErrMsg="Error: The specified email is taken";break;case"INVALID_EMAIL":e.loginErrMsg="Error: The email you entered is invalid";break;case"INVALID_PASSWORD":e.loginErrMsg="Error: The specified password is incorrect.";break;case"INVALID_USER":e.loginErrMsg="Error: The specified user does not exist.";break;default:e.loginErrMsg="Error: "+t.code}})}}angular.module("app.login").controller("LoginCtrl",e),e.$inject=["$scope","$rootScope","authService"]}(),function(){"use strict";function e(e,t,r){function n(e){l.child("users").child(e.id).set(e)}function o(){return l.getAuth()}function s(e,t){var n=r.defer();return l.authWithPassword(e,function(e,t){e?n.reject(e):n.resolve(t)}),n.promise}function a(e,t){l.createUser(e,function(r,o){r?console.log("Yo, Error: ",r):s(e,function(e){n(e)},t)})}function i(e){var t=l.child("users").child(e).child("events");return t}function u(e){l.onAuth(e)}function c(){l.unauth()}var l=new Firebase(t),g={saveNewUser:n,getUserAuth:o,createUser:a,loginWithPwd:s,setEventRef:i,setOnAuth:u,logOutUser:c};return g}angular.module("app.fbAuth").service("authService",e),e.$inject=["$firebase","FBURL","$q"]}();